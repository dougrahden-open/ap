# This handles all Okta authentication for the portal

apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy-config
  namespace: portal
data:
  oauth2-proxy.cfg: |
    # Provider Configuration
    provider = "oidc"
    provider_display_name = "INL Okta"
    oidc_issuer_url = "https://inl.okta.com/oauth2/default"  # Confirm this URL with your Okta setup

    # This must match the Okta app configuration exactly
    redirect_url = "https://aaportal.inl.gov/authorization-code/callback"  # Exact match to your spec; change to http if no HTTPS

    # Custom paths to match your requirements
    auth_url_path = "/authorization-code/start"
    callback_path = "/authorization-code/callback"

    # Skip the provider selection screen
    skip_provider_button = true

    # Only allow @inl.gov emails
    email_domains = ["inl.gov"]

    # Cookie settings for security (set cookie_secure=false if no HTTPS)
    cookie_secure = true  # Change to false for HTTP testing
    cookie_httponly = true
    cookie_samesite = "lax"
    cookie_expire = "12h"
    cookie_refresh = "60m"
    cookie_name = "_oauth2_proxy"

    # CRITICAL: These settings enable header injection (email as preferred_username)
    set_xauthrequest = true
    set_authorization_header = true
    pass_authorization_header = true
    pass_access_token = true
    pass_user_headers = true

    # This extracts email from Okta's preferred_username field
    oidc_email_claim = "preferred_username"

    # Required for the auth endpoint
    upstreams = ["file:///dev/null"]

    # Reduce log noise
    silence_ping_logging = true

    # Listen on all interfaces
    http_address = "0.0.0.0:4180"

-----

apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  namespace: portal
  labels:
    app: o2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: o2-proxy
  template:
    metadata:
      labels:
        app: o2-proxy
    spec:
      containers:
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
          args:
            - --config=/etc/oauth2-proxy/oauth2-proxy.cfg
          envFrom:
            - secretRef:
                name: oauth2-proxy-secrets
          ports:
            - containerPort: 4180
              name: http
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/oauth2-proxy
              readOnly: true
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: config
          configMap:
            name: oauth2-proxy-config

-----

apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
  namespace: portal
  labels:
    app: o2-proxy
spec:
  selector:
    app: o2-proxy
  ports:
    - name: http
      port: 4180
      targetPort: http
      protocol: TCP
  type: ClusterIP
